var http = require('http');
var querystring = require('querystring');

var models = {};
var resolver;
var dal;
var express;


exports.init = function(config) {
	this.initResolver(config.resolver);
	this.initDB(config.db);
}

exports.initResolver = function(options) {			
	this.engine(options.engine);
	this.include(options.inlcudes);
	this.register(options.models);
}

// sets the engine
exports.engine = function(engine) {	
	var r = require('./' + engine);
	resolver = new r();
	console.log('INFO: engine "' + engine + '" loaded successfully');
}

// loads models
exports.include = function(includes) {
	if (includes instanceof Array) {
		includes.forEach(function(path) {
			resolver.include(path);
			console.log('INFO: path "' + path + '" included successfully');
		});
	} else {
		resolver.include(includes);
		console.log('INFO: path "' + includes + '" included successfully');
	}
}

exports.register = function(m) {
	if (m instanceof Array) {
		m.forEach(function (model) {
			url = resolver.getUrl(model);
			models[model] = {};
			models[model].url = url;
		});
	} else {
			url = resolver.getUrl(model);
			models[m] = {};
			models[m].url = url;
		console.log('INFO: model "' + m + '" registered successfully');
	}
}

// sets the DB engine
exports.initDB = function(options) {	
	var r = require('./' + options.engine);
	dal = new r();
	dal.init(options.host, options.port);
	dal.connect(options.name, options.user, options.password);
	console.log('INFO: DB engine "' + options.engine + '" loaded successfully');
}

exports.remove = function(model, filter, callback) {
	dal.remove(model, filter, function(err, items) {
		if (callback)
			callback(err, items);
	});
}

exports.insert = function(model, items, callback) {
	dal.insert(model, items, function(err, items) {
		if (callback) 
			callback(err, items);
	});
}

exports.use = function(express) {
	this.express = express;
	for (model in models) {
        url = models[model].url;
		
		// get all
        express.get(url, function(req, res) {
			// todo: retrieve filters from req
			// var filters = ...
			
			dal.find(model, {}, function(err, result) {
				if (err)
					throw err;
				else
					res.send(result);
			});
		});
		
		// get by id
		express.get(url + '/:id', function(req, res) {
			var id = req.params.id;
			dal.findById(model, id, function(err, result) {	
				if (err)
					throw err;
				else 
					res.send(result);				
			});
		});
		
		// insert
        express.post(url, function(req, res) {
			item = req.body;
			dal.insert(model, item, function(err, result) {
				if (err)
					throw err;
				else
					res.send(result);
			});			
		});
	
		express.put(url + '/:id', function(req, res) {
			var id = req.params.id;
			var item = req.body;
			delete item._id;
			dal.updateById(model, id, item, function(err, result) {
				if (err) 
					throw err;
				else 
					res.send(item);
			});
		});
		
        express.delete(url + '/:id', function (req, res) {
			var id = req.params.id;
			dal.removeById(model, id, function(err, result) {
				if (err)
					throw err;
				else
					res.send(req.body);
			});
		});
    };
}

exports.dal = dal;